{
    "civil": [
        "> > I'm not sure what you mean by \"conda cannot handle Python3.9\", the following works for me:\n> > ```\n> conda create -c conda-forge python=3.9 -n py39-demo\n> ```\n> > Note though that OCP and CQ are not built for Python 3.9 yet.\nI'm not sure why the miniconda docs say the following then? I couldn't even get Conda itself to run at all without errors as long as I didn't have Python 3.8 installed on the system (unless conda magically started working due to some other thing a fiddled with). ![image](https://user-images.githubusercontent.com/22872340/104819960-b1872d00-5831-11eb-911c-d289d0c25198.png)\nOr is it that: miniconda needs system Python 38 for itself to run, but can run environments within itself that are Python 39? This was answered below: yes.",
        "Same here ☹️ I have to refactor all my `useResultCache()` calls with an ugly `if`s:\n```\n👌 Nice and smooth in ORM 2:\n$res = $entityManager\n->createQuery($dql)\n->useResultCache($cache_enabled, $ttl)\n->getResult();\n----\n🤮 Ugly in ORM 3:\n$q = $entityManager->createQuery($dql);\nif ($cache_enabled) {\n$q->enableResultCache($ttl);\n}\n$res = $q->getResult();\n```",
        "Why not just making it so that the speed button in the popup open the same dialog as the background and normal players?"
    ],
    "uncivil": [
        "As designed above (cancel trade) is a simplistic \"I fucked up, here take my money and call it quits\" approach.\n\nMediation **works better** because it is more flexible both in negotiation and payout.\n\n@burningman2 Thanks - what you describe above is exactly what I implemented.  Having tried it I think it is inflexible and would not be used because users think they are losing a lot of money and can get a better deal from mediation.\n\n---\n\nMy current thoughts:\nFor users to resolve the trade between themselves, allow them to negotiate, sign/publish their 2 of 2 payout transaction using amounts that they agree upon.  Could be implemented by adding functionality to the trader chat GUI.  Should I open a DAO proposal for that @wiz ?\n",
        "OMG! I love it! \n",
        "against stupid political agitation that has no place in opensource world. Whole world use master/slave terminology in almost all technical sciences and there is no reason to change it. As I am not communist, I am doing regular commit and PR and not rewriting the (git) history by force ...\n### Motivation and Context\nRemoves political agitation from the code. Makes code much more readable and clean. ### Description\nOnly clean revert of previous weird commit. No additional changes.\n### How Has This Been Tested?\nDidn't make any tests.\n### Types of changes\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\n- [ ] Bug fix (non-breaking change which fixes an issue)\n- [ ] New feature (non-breaking change which adds functionality)\n- [ ] Performance enhancement (non-breaking change which improves efficiency)\n- [x] Code cleanup (non-breaking change which makes code smaller or more readable)\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\n- [ x] Documentation (a change to man pages or other documentation)"
    ]
}