{
    "bitter frustration": [
        "@erfannariman What's difficult, for example, is how complicated [this answer using `melt`](https://stackoverflow.com/a/65722008/) is relative to how simple [this answer using `lookup`](https://stackoverflow.com/a/45487394/) is. The answer using `melt` requires three complicated method calls relative to the answer using `lookup` which is a single simple method call. In summary, just as you're saying, `DataFrame.lookup` could've been reimplemented using `melt`, thereby satisfying everyone.",
        "> but i am starting to get sick of library maintainers taking bug reports as personal attacks\r\nIf this happens a lot consider whether you're contributing to that? It's the all caps you're using on multiple issues I take issue with, not opening new issues. I asked you super nicely to chill a little, that's all. 😕",
        "Hi,\r\nI'm going to be polite. This non-sense is baffling: [Setup-pdf.js](https://github.com/mozilla/pdf.js/wiki/Setup-pdf.js-in-a-website)\r\nAnd from an older issue: [Issue 9210](https://github.com/mozilla/pdf.js/issues/9210#issuecomment-347834276) Quote: **\"Hence we don't want to make it too simple to use it directly.\"** Honestly, what is that????\r\nWhat I'm supposed to do? Go through the ~2000 LOC of `PDFViewerApplication` from `web/viewer.js` to just make the full viewer work? Now I think I understand **why** it wasn't added under `examples`. Can you please explain what's the whole point of this crap?\r\nMaybe you can learn a bit from Leaflet, simply adding proper attribution should be enough provided you want credit. Please make things simpler and easier, and not harder as quoted. No one wants to waste time."
    ],
    "impatience": [
        "It would also have helped if the issue title and description had more\r\ninformation. I certainly could not tell what this PR was for just by\r\nlooking at this among all of the other PRs and issues.\r\nOn Tue, Mar 17, 2020 at 8:37 PM Thomas A Caswell <notifications@github.com>\r\nwrote:\r\n> The tests are still not passing and none of the issues brought up in\r\n> #16631 <https://github.com/matplotlib/matplotlib/issues/16631> (the need\r\n> to document the API changes, an attempt to move to the simpler fix, or a\r\n> clear argument as to why IndexFormatter should not be deprecated). From my\r\n> point of view we have been waiting on you.\r\n>\r\n> —\r\n> You are receiving this because you are subscribed to this thread.\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/matplotlib/matplotlib/pull/16634#issuecomment-600366626>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AACHF6DM2ANDPG462BOB3BLRIAJUTANCNFSM4K73BSUA>\r\n> .\r\n>",
        "I am here to second that motion. Was quite surprised to see that I needed to install some additional .net software in order to use ScreenToGif. This is soo sad.\r\nFrom a developer point of view, WHY do you need the newer .Net framework - What part of it, is it that you need ?",
        "#2818 changed the **Vala** parser to an officially maintained one. Plugins and color schemes that bundle their own queries need to be adapted."
    ],
    "mocking": [
        "Thanks for contributing your expertise @gonzopancho :) I do apologise for giving myself legal advice earlier.\r\nThe start of section 10 (2) states:\r\n>A person infringes a **registered trade mark** if he uses **in the course of trade** a sign where\r\nbecause:\r\nYour quoted section (\"10(2)(b)\") is indented **underneath the above**. Emphasis is mine.\r\n----------\r\nThis is moot however, because I have already committed to change the name.",
        "I think it is a trick",
        "No, type hints are, in my opinion, an abomination that has no business being part of the Python language :)"
    ],
    "entitlement": [
        "@BenMorel I agree with you. The Doctrine mantra I keep hearing seems to be along the line of \"Well, it kind of works in most cases and changing things is hard so let's not do it\".\r\nThey say a picture says a thousand words and I think this picture sums up my feelings about Doctrine right now: ![](https://i.imgur.com/Rl0VmKc.jpg)\r\nDisclaimer: Owners, don't take offense - it's meant in a lighthearted way and is just my personal opinion. I know you work hard on this, and for that I thank you. I just disagree a bit with the general negativity that I personally see towards any major changes. I know you're working on 3.0 but Symfony and others are leaving you in the dust. If there's too much work, consider giving other contributors more rights or bumping the major version more often so that there can be BC breaks.",
        "What used to make it easy to get started with PHP now falls flat on your face after almost 20 years. It's really annoying when projects have grown over the years without having had the time to adapt the source code. For months I've been spending my time reworking the code - which no client pays for. I think I am not alone in this. I'm still waiting for the day when procedural programming in PHP is switched off ...",
        "I've locked this thread to make it clear that this is no longer the place to have feature request discussions. This is not a bug.\r\nIf anyone cares enough to see this behavior changed, please [file a formal RFC](https://github.com/npm/rfcs) with more details around expected behavior. We no longer have the time or bandwidth to discuss more informal, off-the-cuff ideas.\r\nFurthermore, if what you want to do is discuss ideas more openly without a formal proposal, with the understanding that the npm team won't really engage with you about it, you can also post in the [ideas category in npm.community](https://npm.community/c/ideas), which is a great place to brainstorm before filing an RFC."
    ],
    "irony": [
        "> Would be nice to have a bit of a heads-up on stuff that requires consumers to rewrite their stuff.\r\nIsn't that exactly what a deprecation does? What would you do?\r\n> did I understand it correctly that now instead of using these events, I'm supposed to extend/override all the Platform classes I use?\r\nI don't think that's the right thing to do, see https://doctrine.slack.com/archives/CA9600CLC/p1666886106048959",
        "I know the Internet loves being cute, but this error is unhelpful.",
        "That would work, but the (badly named) command \"options\" have special meaning. Timeout is a separate parameter."
    ],
    "vulgarity": [
        "No one really gives a fuck about you 😔",
        "> _No description provided._\r\n建议联系商务，您先报个价，交钱您是大爷，没有？那您是屁。",
        "> And you're probably trying to tell me the exact time of the commit to master is just coincidence. Of course it's not a coincidence. The problem here is you wanting to get v3.0.x working (which is fine), but then bitching about a different branch, after not reading the \"master\" commit message.\r\n> Well, I won't bother you any further with unwanted patches.\r\nSee? You're an asshole. We're happy to accept patches, as you well know. So this comment is just you doubling down on lies and poor behavior."
    ],
    "insulting": [
        "xBR destroys Pixel art",
        "@rsc it's simple, you have a string and a validation function that ensures that string is \"at protocol\" meaning hasn't the distant device doesn't even fully support ASCII, then you need to pass it through that distant device so you base64 encode the validated string and send it.\r\nWhat you are saying isn't real, there's no where on earth where an operating system requires code to not using bits and those work with Go servers that use strings for simplicity.",
        "As a user my pull request would simply be disabling the message altogether. But that might be useful for developers. Idea is.. if your \"expected debug message\" takes a dump on the UI which is user-facing then your \"feature\" is as useful as this guy's facial tattoo:\r\n![useful facial tattoo](https://i.pinimg.com/736x/11/8f/e6/118fe6cec3fbfc8ead6eea47f7dc15cc--worlds-worst-tattoos-the-ojays.jpg)\r\nMaybe another solution would be to keep deprecation messages away from the UI. Or give the user a way to use filters?\r\nOtherwise this is how much fun you can have as a user trying to debug why the email app chokes on ssl connections:\r\n[much fun - 37MB gif](https://bugout.regex.cf/dumbestdesignaward2020.gif)"
    ],
    "threat": [
        "@DoctorWarez Go check out recent nightlies and test with other people with recent nightlies. Oh, and lose the shitty attitude already. You are already on thin ice here, it's best not to continue pushing your luck.\r\nWe are fine with making improvements to platform ports but we cannot deal witha busive and disrespectful endusers, sorry. Fix the attitude and things can actually start happening, the only other alternative is either you getting banned and capable devs losing interest in further improving this platform port due to hostility (perceived or otherwise) from endusers like you. The former actually gets stuff done, the latter is just petulant childishness that will result in nothing. You make the choice what it's going to be. No more arguing from this point on.\r\nI remind you again, if we get any more of this attitude from you, it's a permanent suspension from the entire organization. You will NOT be disrespectful to our developers on Github. That is a red line in the sand that nobody can cross.",
        "This is the final notice. Be honest, respectable, and collaborative.",
        "@Tectract Your comments are offensive and disrespectful. Caution, I may block you to keep a safe place next time."
    ],
    "identify attack/name calling": [
        "Love the personal attack too. Nice to know if I ever want to deal with pompous assholes I can just create a Symfony issue.",
        "I can't see how it's the type system's fault when programmers assume that a mechanism that looks like prepared statements will defuse any data they pass in. Let's at least blame it at the programmers for trusting visual similarity instead of reading the manual thoroughly.",
        "@freekmurze I've displayed absolutely no sense of entitlement. I urge you to re-read what's actually happened. I don't need or want your support. I'm being selfless giving you information about your project, and it's DISGUSTINGLY being rejected due to laziness and bureaucracy. 1. A ticket was opened a year ago and @driesvints refused to investigate.\r\n2. I opened a new ticket with a typo relating to an unsupported version. @driesvints closed the ticket, despite common sense suggesting this bug still exists. I called out @driesvints for refusing to investigate.\r\nMy tone is perfectly fine when addressing rude and lazy children.\r\nP.S.\r\n[Mike McQuaid](https://blog.container-solutions.com/author/mike-mcquaid)\r\nMike McQuaid is an abusive troll and hypocrite who frequently verbally abuses people online. He then writes arrogant articles and claims he's against \"hate\". Mike is a manipulator and perfectly embraces _\"Always accuse your enemy of exactly what you are doing\"_\r\nThanks for linking me to a perfect example of what a human shouldn't be.\r\n---\r\nConsidering this is YOUR project. As Your buddy Mike would put it: I owe you nothing. Simply reporting a bug means I've gifted you something of value. I don't owe you a version number. I don't owe you my OS. I don't owe you my time. If you close the ticket because you're too lazy to care about your own project, then re-think why you chose this job, and re-think why you want to write open-source.\r\nBecause, despite Mike's revolting position on open-source code, open-source is about serving, giving and being selfless. If you take on an open-source project, you owe everyone everything. That's the sacrifice you chose. If you can't hack it, then don't do it."
    ],
    "none": [
        "I was not able to replicate your issue with the steps provided on the environments provided. And apparently only one other person ran into it but provided no clear instructions how to replicate it.\r\n> See the date of creation - the publisher isn't interested in fixing this issue.\r\nI'm unsure where we ever stated that we will no longer look into the issue? The issue has been reported ~1 month-ish ago and is no show stopper.\r\nGeneral rule of thumb is, that is this an open source project, where everyone is welcome to contribute features, fixes or documentation (like in the nature of any other open source project).\r\nYou are more than welcome to look into it yourself and provide a solution that applies to a reproducible list of steps and help to fix your issue.\r\nThis is not one of our daytime jobs and we have no obligation to deliver a fix in any specific time frame. We, and any of our other our other contributors, look into issues when and if we have the time to.\r\nMany of us are working full time, are engaged with major exams or are involved in other time consuming projects.\r\nPlotSquared is not the center of the universe everything else wraps around.\r\n> For a payed plugin, it's the worst support I've ever seen.\r\nYou bought the plugin to support the people behind it. It's not a support contract with any obligation to deliver a solution to your problem in a specific time frame. Yet again, you are more than welcome to look into itself and help resolving the issue, like in the nature of open source projects, instead of complaining and not providing anything new that helps to resolve the issue.",
        "@lauriejim Maybe is a good example for another guide?",
        "I'm -0 to this change, Many open source project are considering this change but I'm very fearful of all the changes to scripts/automation. As @MylesBorins mentioned, we will need to do a full audit before considering this change. I'd also suggest pushing out a blog post/tweets detailing the changes several weeks before we make the switch in order to give developers a chance to migrate any tooling that they're written."
    ]
}